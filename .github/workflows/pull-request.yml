name: PR Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Use the version your project needs

      # Step 3: Identify changed folders with package.json
      - name: Identify changed folders
        id: find_changed_folders
        run: |
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"

          # Find unique directories containing changed files
          CHANGED_FOLDERS=$(echo "$CHANGED_FILES" | xargs -n1 dirname | sort -u)
          echo "Changed folders: $CHANGED_FOLDERS"

          # Filter folders with package.json
          DEPLOY_FOLDERS=""
          for folder in $CHANGED_FOLDERS; do
            if [[ -f "$folder/package.json" ]]; then
              DEPLOY_FOLDERS="$DEPLOY_FOLDERS $folder"
            fi
          done

          # Set the output for the next steps
          echo "deploy_folders=$DEPLOY_FOLDERS" >> $GITHUB_OUTPUT
          echo "Folders to deploy: $DEPLOY_FOLDERS"

      # Step 4: Run vev deploy for each folder
      - name: Deploy changed folders
        if: steps.find_changed_folders.outputs.deploy_folders != ''
        run: |
          for folder in ${{ steps.find_changed_folders.outputs.deploy_folders }}; do
            echo "Deploying $folder"
            cd $folder
            vev deploy --dev --token=${{ secrets.VEV_TOKEN_DEV }}
            cd -
          done